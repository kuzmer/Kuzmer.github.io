/**
 * 3D Spherical Image Gallery
 * ---------------------------------------------
 * Version 1.0.2, built on Tuesday, July 25, 2017
 * Copyright (c) WebTheGap <mail@webthegap.com>. All rights reserved.
 * Demo: http://webthegap.com/products/3d-spherical-image-gallery/
 * Purchase: https://codecanyon.net/item/3d-spherical-image-gallery/19350784?ref=financialtechnology
 * Like: https://www.facebook.com/webthegap/
 */
"use strict";
var sphericalImageGallery = function(e, t) {
    function i() {
        "object" == typeof arguments[0] && (C = e.extend(C, arguments[0])), e(document).ready(function() {
            E = e(C.container), E.css({
                background: C.backgroundColor,
                margin: "0 auto"
            }), E.append('<div class="loader"><div class="loader-inner"><div class="loader-line-wrap"><div class="loader-line"></div></div><div class="loader-line-wrap"><div class="loader-line"></div></div><div class="loader-line-wrap"><div class="loader-line"></div></div><div class="loader-line-wrap"><div class="loader-line"></div></div><div class="loader-line-wrap"><div class="loader-line"></div></div><div class="loader-text">0%</div></div></div>'), R = E.find(".loader-text"), R.css({
                color: C.textColor
            }), E.width(C.containerWidth), E.height(C.containerHeight);
            var t = Math.min(E.innerWidth(), E.innerHeight());
            t >= 1500 ? (M = 512, T = 512) : t < 1500 && t >= 600 ? (M = 256, T = 256) : (M = 128, T = 128);
            var i = function() {
                e(".loader").hide();
                var t = e(Detector.getWebGLErrorMessage());
                t.css({
                    position: "absolute",
                    left: 0,
                    right: 0,
                    top: 0,
                    bottom: 0,
                    margin: "auto",
                    height: "100px",
                    background: "transparent",
                    color: C.textColor
                }), document.body.appendChild(t[0])
            };
            e("<canvas></canvas>")[0].getContext("webgl");
            if (!Detector.webgl) return void i();
            var a = document.createElement("canvas");
            a.width = M, a.height = T;
            a.getContext("2d");
            n()
        })
    }

    function a(e, t, i) {
        var a = i || 0;
        return t < 1e-5 ? a : (e -= a, e < 0 ? e -= Math.floor(e / t) * t : e %= t, e + a)
    }

    function o(e, i, a) {
        var o = document.createElement("canvas");
        o.width = M, o.height = T;
        var n = o.getContext("2d", {
            alpha: !0
        });
        n.clearRect(0, 0, M, T);
        for (var r = n.getImageData(0, 0, o.width, o.height), l = 3; l < r.data.length; l += 4) r.data[l] = Math.floor(.9 * r.data[l]);
        if (n.putImageData(r, 0, 0), C.displayImageTitle) {
            n.drawImage(e, 0, 0, M, T - Math.ceil((2 * C.imageTitleFontSize + C.imageTitleBottomPadding1 + C.imageTitleBottomPadding2 + C.imageTitleTopPadding) * T)), n.font = Math.ceil(C.imageTitleFontSize * T) + "px sans-serif", n.fillStyle = C.textColor;
            var s = Math.ceil(n.measureText(a).width / M);
            s < 1 && (s = 1);
            var d = 10;
            "center" == C.imageTitleAlignment && (n.textAlign = "center", d = Math.ceil(M / 2)), n.fillText(a.substr(0, Math.floor(a.length / s)), d, T - Math.ceil((C.imageTitleFontSize + C.imageTitleBottomPadding1 + C.imageTitleBottomPadding2) * T)), s > 1 && n.fillText(a.substr(Math.floor(a.length / s)), d, T - Math.ceil(C.imageTitleBottomPadding2 * T))
        } else n.drawImage(e, 0, 0, M, T);
        G[i].texture = new t.Texture(o), G[i].texture.needsUpdate = !0
    }

    function n() {
        e.get(_, {
            type: "list",
            imageFolder: C.imageFolder
        }, function(e) {
            var t = 0;
            for (var i in e) e.hasOwnProperty(i) && t++;
            var a = 0;
            for (var i in e) G[a] = {
                    file: i,
                    folder: e[i].folder,
                    title: e[i].title,
					url: e[i].url,
                    texture: null
                },
                function(e) {
                    var i = new Image;
                    i.onload = function() {
                        setTimeout(function() {
                            o(i, e, G[e].title), F++, R.html((F / t * 100).toFixed(0) + "%"), F == t && s()
                        }, 0)
                    };
                    var a;
                    a = C.displayImageTitle ? T - Math.ceil((2 * C.imageTitleFontSize + C.imageTitleBottomPadding1 + C.imageTitleBottomPadding2 + C.imageTitleTopPadding) * T) : T, 
					//i.src = _ + "?type=thumb&thumb=" + (M + "x" + a + "x" + C.thumbType) + "&image=" + encodeURIComponent(G[e].file) + "&imageFolder=" + encodeURIComponent(G[e].folder);
					i.src = G[e].url;
					//G[e].file
                }(a), a++
        })
    }

    function r() {
        return {
            width: C.imageWidth * C.imageSpacing * C.imageScale,
            height: C.imageHeight * C.imageSpacing * C.imageScale
        }
    }

    function l() {
        var e = r(),
            t = Math.PI,
            i = Math.floor(t / e.width),
            o = Math.floor(t / e.height),
            n = Math.floor(i * -.5),
            l = Math.floor(o * -.5),
            s = a(L % 1, 1),
            d = a(Y % 1, 1),
            m = -a(Math.floor(L - n), C.imagesAcrossGrid),
            u = -a(Math.floor(Y - l), C.imagesDownGrid);
        return {
            unit: e,
            imagesAcrossSphere: i,
            imagesDownSphere: o,
            gridXOff: n,
            gridYOff: l,
            xOff: s,
            yOff: d,
            texXBase: m,
            texYBase: u
        }
    }

    function s() {
        e(".loader").hide();
        var i = E.width() || 2,
            a = E.height() || 2;
        A = new t.WebGLRenderer({
            antialias: !0,
            alpha: !0
        }), A.setPixelRatio(window.devicePixelRatio), A.setSize(i, a), A.setClearColor(16777215, 0);
        for (var o = [], n = document.location.pathname, s = 0; s < n.length; s++) o.push(n.charCodeAt(s));
        /*4.7112114111100115e98 != o.join("") && (G = []),*/ D = new t.WebGLRenderTarget(i, a), D.texture.minFilter = t.LinearFilter, E.append(e(A.domElement)), P = new t.PerspectiveCamera(60, i / a, 1, 5e3), P.position.z = C.eyeRadius, S = new t.Scene;
        var u = r(),
            c = Math.PI;
			debugger
        C.imagesAcrossGrid = Math.floor(c / u.width) + C.imagesAcrossAppend, C.imagesDownGrid = Math.ceil(G.length / C.imagesAcrossGrid);
        var v = new t.PlaneGeometry(100, 100),
            f = new t.ShaderMaterial({
                vertexShader: I.blank_v,
                fragmentShader: I.blank_f
            }),
            g = new t.Mesh(v, f);
        g.position.z = 1, k = [];
		debugger
        for (var h = 0; h < C.imagesDownGrid; ++h) {
            for (var p = [], M = 0; M < C.imagesAcrossGrid; ++M) void 0 != G[h * C.imagesAcrossGrid + M] ? p.push(G[h * C.imagesAcrossGrid + M]) : p.push(G[Math.ceil((G.length - 1) * Math.random())]);
            k.push(p)
        }
        v = new t.PlaneGeometry(1, 1, 20, 20);
        for (var T = l(), R = 0; R <= T.imagesDownSphere; ++R) {
            for (var _ = [], F = 0; F <= T.imagesAcrossSphere; ++F) {
                var X = {
                        texture: {
                            value: null
                        },
                        world: {
                            value: new t.Matrix4
                        },
                        viewProjection: {
                            value: P.projectionMatrix
                        },
                        bendAmount: {
                            value: C.bendAmount
                        },
                        bendRadius: {
                            value: C.bendRadius
                        },
                        gamma: {
                            value: 1
                        },
                        isPick: W,
                        pickID: {
                            value: new t.Vector3(R / 256, F / 256, .5)
                        }
                    },
                    f = new t.ShaderMaterial({
                        uniforms: X,
                        vertexShader: I.sphere_v,
                        fragmentShader: I.sphere_f
                    });
                f.needsUpdate = !0, _[F] = new t.Mesh(v, f), S.add(_[F])
            }
            z[R] = _
        }
        A.domElement.addEventListener("mousemove", w, !1), A.domElement.addEventListener("mousedown", x, !1), A.domElement.addEventListener("mouseup", y, !1), A.domElement.addEventListener("wheel", m, !1), A.domElement.addEventListener("touchmove", w, !1), A.domElement.addEventListener("touchend", y, !1), A.domElement.addEventListener("touchstart", x, !1), E.resize(d), b()
    }

    function d(e) {
        var t = E.width() || 2,
            i = E.height() || 2;
        A.setPixelRatio(window.devicePixelRatio), A.setSize(t, i), P.aspect = t / i, P.updateProjectionMatrix()
    }

    function m(e) {
        if (!C.enableZoom) return !1;
        e = e || window.event;
        var t = e.deltaY || e.detail || e.wheelDelta;
        t > 0 ? P.fov += 10 : P.fov -= 10, P.fov < 3 && (P.fov = 3), P.fov > 120 && (P.fov = 120), P.updateProjectionMatrix()
    }

    function u(e) {
        ee.length == $ && ee.shift();
        var t = .001 * (new Date).getTime();
        ee.push({
            position: e,
            time: t
        })
    }

    function c(e, i, a, o) {
        var n = e / (.5 * a) - 1,
            l = -(i / (.5 * o) - 1),
            s = (new t.Matrix4).multiplyMatrices(P.projectionMatrix, z[0][0].modelViewMatrix),
            d = new t.Vector3(0, 0, C.bendRadius);
        d.applyMatrix4(s);
        var s = (new t.Matrix4).getInverse(s),
            m = new t.Vector3(n, l, d.z);
        m.applyMatrix4(s);
        var u = r(),
            c = m.x / u.width,
            v = m.y / u.height;
        return {
            x: c,
            y: v
        }
    }

    function v(e) {
        var t = h(e);
        if ("touchend" == e.type) var i = j;
        else var i = f(t);
        return j = i, U = c(i.x, i.y, A.domElement.width, A.domElement.height), {
            x: U.x,
            y: U.y
        }
    }

    function f(e, t) {
        var i, a, o = e.event,
            n = e.element,
            r = t || e.element;
        if (window.opera || "undefined" == typeof o.offsetX)
            if (void 0 != e.event.touches && 1 == e.event.touches.length) i = e.event.touches[0].clientX, a = e.event.touches[0].clientY;
            else {
                var l = g(r);
                i = o.pageX - l.x, a = o.pageY - l.y
            }
        else {
            for (var l = {
                    x: o.offsetX,
                    y: o.offsetY
                }, s = n; s;) s.mouseX = l.x, s.mouseY = l.y, l.x += s.offsetLeft, l.y += s.offsetTop, s = s.offsetParent;
            for (var s = r, d = {
                    x: 0,
                    y: 0
                }; s;) {
                if ("undefined" != typeof s.mouseX) {
                    i = s.mouseX - d.x, a = s.mouseY - d.y;
                    break
                }
                d.x += s.offsetLeft, d.y += s.offsetTop, s = s.offsetParent
            }
            for (s = n; s;) s.mouseX = void 0, s.mouseY = void 0, s = s.offsetParent
        }
        return {
            x: i,
            y: a
        }
    }

    function g(e) {
        var t = {
            x: e.offsetLeft,
            y: e.offsetTop
        };
        if (e.offsetParent) {
            var i = g(e.offsetParent);
            t.x += i.x, t.y += i.y
        }
        return t
    }

    function h(e) {
        e = e ? e : window.event;
        var t = e.target ? e.target : e.srcElement;
        return {
            event: e,
            element: t,
            name: t.id ? t.id : "->" + t.toString(),
            wheel: e.detail ? e.detail : -e.wheelDelta,
            shift: e.modifiers ? e.modifiers & Event.SHIFT_MASK : e.shiftKey
        }
    }

    function p(e) {
        if (!N) {
            W.value = 1, A.render(S, P, D), W.value = 0;
            var t = new Uint8Array(4);
            A.readRenderTargetPixels(D, e.x, D.height - e.y, 1, 1, t);
            var i = t[0],
                a = t[1];
            return (127 == t[2] || 128 == t[2]) && void 0 != z[i] && void 0 != z[i][a] ? z[i][a] : void 0
        }
    }

    function x(e) {
        if (e.preventDefault(), e.stopPropagation(), "touchstart" == e.type && (X = !0), "touchstart" == e.type && e.touches.length > 1) {
            H = !0;
            var i = new t.Vector2(e.touches[0].clientX, e.touches[0].clientY),
                a = new t.Vector2(e.touches[1].clientX, e.touches[1].clientY);
            K = i.distanceTo(a)
        } else {
            var o = v(e);
            N = !0, Z = o.x, q = o.y, Q = L, J = Y, B = 0, O = 0, ee = [], u(o)
        }
        return !1
    }

    function w(e) {
        if (e.preventDefault(), e.stopPropagation(), H) {
            if (e.touches.length < 2) return H = !1, !1;
            var i = new t.Vector2(e.touches[0].clientX, e.touches[0].clientY),
                a = new t.Vector2(e.touches[1].clientX, e.touches[1].clientY),
                o = i.distanceTo(a),
                n = (K - o) / 10;
            P.fov += n, P.fov < 10 && (P.fov = 10), P.fov > 90 && (P.fov = 90), P.updateProjectionMatrix(), K = o
        } else {
            var r = v(e);
            N && (u(r), L = Q + (r.x - Z), Y = J - (r.y - q))
        }
        return !1
    }

    function y(t) {
        if (t.preventDefault(), t.stopPropagation(), N) {
            N = !1;
            var i = v(t);
            u(i);
            var a = ee[0],
                o = ee[ee.length - 1],
                n = o.time - a.time;
            if (n < .4 && (B = (o.position.x - a.position.x) / n, O = -(o.position.y - a.position.y) / n), n < .25 && 100 * (o.position.x - a.position.x) < 1 && 100 * (o.position.x - a.position.x) > -1 && 100 * (o.position.y - a.position.y) < 1 && 100 * (o.position.y - a.position.y) > -1) {
                var r = p(j);
                void 0 != r && e.fancybox({
                    transitionIn: "elastic",
                    transitionOut: "elastic",
                    speedIn: 600,
                    speedOut: 200,
                    type: "image",
                    overlayShow: !1,
                    href: _ + "?type=original&image=" + k[r.yy][r.xx].file + "&imageFolder=" + encodeURIComponent(k[r.yy][r.xx].folder),
                    titlePosition: "inside",
                    title: k[r.yy][r.xx].title
                })
            }
        } else;
        return !1
    }

    function b() {
        var e, i = .001 * (new Date).getTime();
        e = 0 == V ? 0 : i - V, V = i, B *= .95, O *= .95, L += B * e, Y += O * e;
        var o = l(),
            n = void 0;
        j && !X && (n = p(j));
        for (var r = 0; r <= o.imagesDownSphere; ++r)
            for (var s = a(o.texYBase + r, C.imagesDownGrid), d = k[s], m = 0; m <= o.imagesAcrossSphere; ++m) {
                var u = a(o.texXBase + m, C.imagesAcrossGrid);
                void 0 != d[u] ? (z[r][m].visible = !0, z[r][m].yy = s, z[r][m].xx = u, z[r][m].material.uniforms.texture.value = d[u].texture, z[r][m].material.uniforms.bendAmount.value = C.bendAmount, z[r][m].material.uniforms.bendRadius.value = C.bendRadius, n && n == z[r][m] ? z[r][m].material.uniforms.gamma.value = 1.4 : z[r][m].material.uniforms.gamma.value = 1, z[r][m].material.uniforms.world.value.multiplyMatrices((new t.Matrix4).makeTranslation((o.gridXOff + m + o.xOff - s % 2 * C.rowOffset) * o.unit.width, (o.gridYOff + r + o.yOff) * -o.unit.height, 0), (new t.Matrix4).makeScale(C.imageWidth * C.imageScale, C.imageHeight * C.imageScale, 1))) : z[r][m].visible = !1
            }
        A.render(S, P), requestAnimationFrame(b)
    }
    var M, T, P, S, A, D, E, R, C = {
            container: "#spherical-image-gallery",
            containerWidth: "100%",
            containerHeight: "100vh",
            backgroundColor: "radial-gradient(#333333, #fff)",
            displayImageTitle: !1,
            textColor: "#fff",
            imageFolder: "assets/images",
            enableZoom: !1,
            imageScale: .42,
            imageWidth: 1,
            imageHeight: 1,
            imageSpacing: 1.042,
            rowOffset: 0,
            eyeRadius: 5,
            selectionIntensity: .2,
            bendRadius: 2.4,
            bendAmount: 1.2,
            imagesAcrossGrid: 5,
            imagesDownGrid: 0,
            imagesAcrossAppend: 1,
            thumbType: "C",
            imageTitleAlignment: "center",
            imageTitleFontSize: .06,
            imageTitleTopPadding: .01,
            imageTitleBottomPadding1: .01,
            imageTitleBottomPadding2: .02
        },
        I = {
            sphere_v: "uniform mat4 viewProjection;uniform mat4 world;uniform float bendRadius;uniform float bendAmount;varying vec2 vUv;varying float is_output;void main() {    vUv=uv;    vec4 wp = world * vec4(position,1.0);    float longitude = 3.14159 * 0.5 - wp.x;    float latitude = 3.14159 * 0.5 - wp.y;    float sinTheta = sin(longitude);    float cosTheta = cos(longitude);    float sinPhi = sin(latitude);    float cosPhi = cos(latitude);    float ux = cosTheta * sinPhi;    float uy = cosPhi;    float uz = sinTheta * sinPhi;    vec4 wp1 = vec4(      ux * bendRadius,      uy * bendRadius,      uz * bendRadius,      1);    vec4 wp2 = vec4(wp.x, wp.y, wp.z + bendRadius, 1.0);    vec4 r=mix(wp2, wp1, bendAmount);    if(r.z<0.0)      is_output=0.0;    else      is_output=1.0;    gl_Position = projectionMatrix * modelViewMatrix * r;    return;  }",
            sphere_f: "varying vec2 v_texCoord;uniform sampler2D texture;uniform float gamma;uniform vec3 pickID;uniform int isPick;varying vec2 vUv;varying float is_output;  void main() {    vec3 color = texture2D(texture, vUv).rgb;    if(is_output==0.0){      discard;      return;    }    if(isPick==1){      gl_FragColor=vec4(pickID,1);    }    else {      gl_FragColor.rgb = pow(color, vec3(abs(1.0 / gamma)));      gl_FragColor.a = texture2D(texture, vUv).a;    }  }",
            blank_v: "void main() {    gl_Position = projectionMatrix * modelViewMatrix * vec4(position,1.0);}",
            blank_f: "void main() {    gl_FragColor = vec4(0,0,0,0);}"
        },
        _ = "Gallery.json",
        F = 0,
        G = [],
        k = [],
        X = !1,
        z = [],
        L = 0,
        Y = 0,
        B = 0,
        O = 0,
        j = void 0,
        U = void 0,
        V = 0,
        W = {
            value: 0
        },
        H = !1,
        K = 0;
    document.addEventListener("gesturestart", function(e) {
        e.preventDefault()
    });
    var Z = 0,
        q = 0,
        Q = 0,
        J = 0,
        N = !1,
        $ = 4,
        ee = [];
    return {
        create: i
    }
}(jQuery, THREE);